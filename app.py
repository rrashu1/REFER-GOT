import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from referral import do_referral_start
from wallet import handle_withdraw, show_wallet
from db import init_db, get_user, session
from dotenv import load_dotenv

load_dotenv()

def start(update: Update, ctx: CallbackContext):
    do_referral_start(update, ctx)

def wallet(update: Update, ctx: CallbackContext):
    show_wallet(update, ctx)

def withdraw(update: Update, ctx: CallbackContext):
    handle_withdraw(update, ctx)

def text_handler(update: Update, ctx: CallbackContext):
    if ctx.user_data.get('awaiting_bkash'):
        number = update.message.text
        ctx.user_data['awaiting_bkash'] = False
        user = get_user(update.effective_user.id)
        user.balance_usdt -= 0.5
        session.commit()
        update.message.reply_text(f"‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶â‡¶á‡¶•‡¶°‡ßç‡¶∞ ‡¶∞‡¶ø‡¶ï‡ßÅ‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶° ‡¶π‡ßü‡ßá‡¶õ‡ßá:\nüìû bKash: {number}\nüíµ Amount: $0.50\n‚è≥ ‡ß®‡ß™ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá‡•§")

if __name__ == '__main__':
    init_db()
    updater = Updater(os.getenv("BOT_TOKEN"), use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("wallet", wallet))
    dp.add_handler(CommandHandler("withdraw", withdraw))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, text_handler))
    updater.start_polling()
    updater.idle()
